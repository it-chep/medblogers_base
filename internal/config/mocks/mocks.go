// Code generated by MockGen. DO NOT EDIT.
// Source: medblogers_base/internal/config (interfaces: AppConfig)

// Package mocks is a generated GoMock package.
package mocks

import (
	config "medblogers_base/internal/config"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAppConfig is a mock of AppConfig interface.
type MockAppConfig struct {
	ctrl     *gomock.Controller
	recorder *MockAppConfigMockRecorder
}

// MockAppConfigMockRecorder is the mock recorder for MockAppConfig.
type MockAppConfigMockRecorder struct {
	mock *MockAppConfig
}

// NewMockAppConfig creates a new mock instance.
func NewMockAppConfig(ctrl *gomock.Controller) *MockAppConfig {
	mock := &MockAppConfig{ctrl: ctrl}
	mock.recorder = &MockAppConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppConfig) EXPECT() *MockAppConfigMockRecorder {
	return m.recorder
}

// GetAllowedHosts mocks base method.
func (m *MockAppConfig) GetAllowedHosts() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllowedHosts")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAllowedHosts indicates an expected call of GetAllowedHosts.
func (mr *MockAppConfigMockRecorder) GetAllowedHosts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllowedHosts", reflect.TypeOf((*MockAppConfig)(nil).GetAllowedHosts))
}

// GetCreateNotificationChatID mocks base method.
func (m *MockAppConfig) GetCreateNotificationChatID() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreateNotificationChatID")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetCreateNotificationChatID indicates an expected call of GetCreateNotificationChatID.
func (mr *MockAppConfigMockRecorder) GetCreateNotificationChatID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreateNotificationChatID", reflect.TypeOf((*MockAppConfig)(nil).GetCreateNotificationChatID))
}

// GetS3AccessKey mocks base method.
func (m *MockAppConfig) GetS3AccessKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3AccessKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetS3AccessKey indicates an expected call of GetS3AccessKey.
func (mr *MockAppConfigMockRecorder) GetS3AccessKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3AccessKey", reflect.TypeOf((*MockAppConfig)(nil).GetS3AccessKey))
}

// GetS3Config mocks base method.
func (m *MockAppConfig) GetS3Config() config.S3Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3Config")
	ret0, _ := ret[0].(config.S3Config)
	return ret0
}

// GetS3Config indicates an expected call of GetS3Config.
func (mr *MockAppConfigMockRecorder) GetS3Config() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3Config", reflect.TypeOf((*MockAppConfig)(nil).GetS3Config))
}

// GetS3Endpoint mocks base method.
func (m *MockAppConfig) GetS3Endpoint() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3Endpoint")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetS3Endpoint indicates an expected call of GetS3Endpoint.
func (mr *MockAppConfigMockRecorder) GetS3Endpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3Endpoint", reflect.TypeOf((*MockAppConfig)(nil).GetS3Endpoint))
}

// GetS3Region mocks base method.
func (m *MockAppConfig) GetS3Region() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3Region")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetS3Region indicates an expected call of GetS3Region.
func (mr *MockAppConfigMockRecorder) GetS3Region() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3Region", reflect.TypeOf((*MockAppConfig)(nil).GetS3Region))
}

// GetS3SecretKey mocks base method.
func (m *MockAppConfig) GetS3SecretKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3SecretKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetS3SecretKey indicates an expected call of GetS3SecretKey.
func (mr *MockAppConfigMockRecorder) GetS3SecretKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3SecretKey", reflect.TypeOf((*MockAppConfig)(nil).GetS3SecretKey))
}

// GetSalebotHost mocks base method.
func (m *MockAppConfig) GetSalebotHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSalebotHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSalebotHost indicates an expected call of GetSalebotHost.
func (mr *MockAppConfigMockRecorder) GetSalebotHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSalebotHost", reflect.TypeOf((*MockAppConfig)(nil).GetSalebotHost))
}

// GetSubscribersHost mocks base method.
func (m *MockAppConfig) GetSubscribersHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubscribersHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSubscribersHost indicates an expected call of GetSubscribersHost.
func (mr *MockAppConfigMockRecorder) GetSubscribersHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubscribersHost", reflect.TypeOf((*MockAppConfig)(nil).GetSubscribersHost))
}

// GetSubscribersPort mocks base method.
func (m *MockAppConfig) GetSubscribersPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubscribersPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSubscribersPort indicates an expected call of GetSubscribersPort.
func (mr *MockAppConfigMockRecorder) GetSubscribersPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubscribersPort", reflect.TypeOf((*MockAppConfig)(nil).GetSubscribersPort))
}

// GetUserPhotosBucket mocks base method.
func (m *MockAppConfig) GetUserPhotosBucket() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserPhotosBucket")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserPhotosBucket indicates an expected call of GetUserPhotosBucket.
func (mr *MockAppConfigMockRecorder) GetUserPhotosBucket() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserPhotosBucket", reflect.TypeOf((*MockAppConfig)(nil).GetUserPhotosBucket))
}
