// Code generated by MockGen. DO NOT EDIT.
// Source: medblogers_base/internal/modules/doctors/action/doctor_detail/service/enricher (interfaces: SubscribersGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	indto "medblogers_base/internal/modules/doctors/client/subscribers/indto"
	doctor "medblogers_base/internal/modules/doctors/domain/doctor"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSubscribersGetter is a mock of SubscribersGetter interface.
type MockSubscribersGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSubscribersGetterMockRecorder
}

// MockSubscribersGetterMockRecorder is the mock recorder for MockSubscribersGetter.
type MockSubscribersGetterMockRecorder struct {
	mock *MockSubscribersGetter
}

// NewMockSubscribersGetter creates a new mock instance.
func NewMockSubscribersGetter(ctrl *gomock.Controller) *MockSubscribersGetter {
	mock := &MockSubscribersGetter{ctrl: ctrl}
	mock.recorder = &MockSubscribersGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubscribersGetter) EXPECT() *MockSubscribersGetterMockRecorder {
	return m.recorder
}

// GetDoctorSubscribers mocks base method.
func (m *MockSubscribersGetter) GetDoctorSubscribers(arg0 context.Context, arg1 doctor.MedblogersID) (indto.GetDoctorSubscribersResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDoctorSubscribers", arg0, arg1)
	ret0, _ := ret[0].(indto.GetDoctorSubscribersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDoctorSubscribers indicates an expected call of GetDoctorSubscribers.
func (mr *MockSubscribersGetterMockRecorder) GetDoctorSubscribers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDoctorSubscribers", reflect.TypeOf((*MockSubscribersGetter)(nil).GetDoctorSubscribers), arg0, arg1)
}
