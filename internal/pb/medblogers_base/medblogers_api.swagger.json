{
  "swagger": "2.0",
  "info": {
    "title": "doctors/v1/doctors.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DoctorService"
    },
    {
      "name": "Seo"
    },
    {
      "name": "FreelancerService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cities_list": {
      "get": {
        "summary": "Получение городов для регистрации",
        "operationId": "DoctorService_GetCities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1CitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/counters_info": {
      "get": {
        "summary": "Получение информации по счетчикам (количество докторов в базе, количество подписчиков)",
        "operationId": "DoctorService_GetCounters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1GetCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/doctors/create": {
      "post": {
        "summary": "Регистрация доктора",
        "operationId": "DoctorService_CreateDoctor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateDoctorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDoctorRequest"
            }
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/doctors/{doctorSlug}": {
      "get": {
        "summary": "Получение детальной информации про доктора",
        "operationId": "DoctorService_GetDoctor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDoctorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "doctorSlug",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/filter-doctors": {
      "get": {
        "summary": "Фильтрация докторов по доступным фильтрам",
        "operationId": "DoctorService_Filter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1FilterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maxSubscribers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "minSubscribers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUBSCRIBERS_DESC",
              "SUBSCRIBERS_ASC"
            ],
            "default": "SUBSCRIBERS_DESC"
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/freelancers": {
      "get": {
        "operationId": "FreelancerService_GetFreelancers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFreelancersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/cities_list": {
      "get": {
        "summary": "Получение городов для регистрации",
        "operationId": "FreelancerService_GetCities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1CitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/counters_info": {
      "get": {
        "summary": "Получение информации по счетчикам (количество фрилансеров в базе)",
        "operationId": "FreelancerService_GetCounters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1GetCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/create": {
      "post": {
        "summary": "Регистрация фрилансера",
        "operationId": "FreelancerService_CreateDoctor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFreelancersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFreelancersRequest"
            }
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/filter": {
      "get": {
        "summary": "Фильтрация фрилансеров по доступным фильтрам",
        "operationId": "FreelancerService_Filter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1FilterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "societies",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "priceCategory",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "experienceWithDoctors",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/pages_count": {
      "get": {
        "summary": "Получение страниц страниц для фильтрации",
        "operationId": "FreelancerService_GetPagesCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1PagesCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "societies",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "priceCategory",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "experienceWithDoctors",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/preliminary_filter_count": {
      "get": {
        "summary": "Предрасчет фрилансеров попадающих под фильтр",
        "operationId": "FreelancerService_GetPreliminaryFilterCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1PreliminaryFilterCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "societies",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "priceCategory",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "experienceWithDoctors",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/search": {
      "get": {
        "summary": "Поиск фрилансера, города, специальности по переданным значениям",
        "operationId": "FreelancerService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/settings": {
      "get": {
        "summary": "Доступные фильтры",
        "operationId": "FreelancerService_GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1GetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/specialities_list": {
      "get": {
        "summary": "Получение специальностей для регистрации",
        "operationId": "FreelancerService_GetSpecialities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/freelancersv1SpecialitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/freelancers/{freelancerSlug}": {
      "get": {
        "summary": "Получение детальной информации про фрилансера",
        "operationId": "FreelancerService_GetFreelancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFreelancerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "freelancerSlug",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FreelancerService"
        ]
      }
    },
    "/api/v1/pages_count": {
      "get": {
        "summary": "Получение страниц страниц для фильтрации",
        "operationId": "DoctorService_GetPagesCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1PagesCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maxSubscribers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "minSubscribers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/preliminary_filter_count": {
      "get": {
        "summary": "Предрасчет докторов попадающих под фильтр",
        "operationId": "DoctorService_GetPreliminaryFilterCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1PreliminaryFilterCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "maxSubscribers",
            "description": "todo вынести в common",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "minSubscribers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "cities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "specialities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "socialMedia",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/search-doctors": {
      "get": {
        "summary": "Поиск доктора, города, специальности по переданным значениям",
        "operationId": "DoctorService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/seo/{doctorSlug}": {
      "get": {
        "summary": "Получение SEO информации для карточки врача",
        "operationId": "Seo_GetDoctorSeoData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDoctorSeoDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "doctorSlug",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Seo"
        ]
      }
    },
    "/api/v1/settings": {
      "get": {
        "summary": "Доступные фильтры",
        "operationId": "DoctorService_GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1GetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DoctorService"
        ]
      }
    },
    "/api/v1/specialities_list": {
      "get": {
        "summary": "Получение специальностей для регистрации",
        "operationId": "DoctorService_GetSpecialities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/doctorv1SpecialitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DoctorService"
        ]
      }
    }
  },
  "definitions": {
    "FilterRequestSort": {
      "type": "string",
      "enum": [
        "SUBSCRIBERS_DESC",
        "SUBSCRIBERS_ASC"
      ],
      "default": "SUBSCRIBERS_DESC"
    },
    "GetSettingsResponseFilterItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "GetSettingsResponsePriceCategoryItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetSettingsResponseSocietyItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "doctorv1CitiesResponse": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1CitiesResponseCityItem"
          }
        }
      }
    },
    "doctorv1CitiesResponseCityItem": {
      "type": "object",
      "properties": {
        "cityId": {
          "type": "string",
          "format": "int64"
        },
        "cityName": {
          "type": "string"
        }
      }
    },
    "doctorv1FilterResponse": {
      "type": "object",
      "properties": {
        "doctors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterResponseDoctorItem"
          }
        },
        "subscribersCount": {
          "type": "string"
        }
      }
    },
    "doctorv1GetCountersResponse": {
      "type": "object",
      "properties": {
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        },
        "subscribersCount": {
          "type": "string"
        }
      }
    },
    "doctorv1GetSettingsResponse": {
      "type": "object",
      "properties": {
        "filterInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetSettingsResponseFilterItem"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1GetSettingsResponseCityItem"
          }
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1GetSettingsResponseSpecialityItem"
          }
        },
        "newDoctorBanner": {
          "type": "boolean"
        },
        "minSubscribers": {
          "type": "string",
          "format": "int64"
        },
        "maxSubscribers": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1GetSettingsResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1GetSettingsResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1PagesCountResponse": {
      "type": "object",
      "properties": {
        "pagesCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1PreliminaryFilterCountResponse": {
      "type": "object",
      "properties": {
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1SearchResponse": {
      "type": "object",
      "properties": {
        "doctors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchResponseDoctorItem"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1SearchResponseCityItem"
          }
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1SearchResponseSpecialityItem"
          }
        }
      }
    },
    "doctorv1SearchResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1SearchResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "doctorsCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "doctorv1SpecialitiesResponse": {
      "type": "object",
      "properties": {
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/doctorv1SpecialitiesResponseSpecialityItem"
          }
        }
      }
    },
    "doctorv1SpecialitiesResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "specialityId": {
          "type": "string",
          "format": "int64"
        },
        "specialityName": {
          "type": "string"
        }
      }
    },
    "freelancersv1CitiesResponse": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1CitiesResponseCityItem"
          }
        }
      }
    },
    "freelancersv1CitiesResponseCityItem": {
      "type": "object",
      "properties": {
        "cityId": {
          "type": "string",
          "format": "int64"
        },
        "cityName": {
          "type": "string"
        }
      }
    },
    "freelancersv1FilterResponse": {
      "type": "object",
      "properties": {
        "freelancers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterResponseFreelancerItem"
          }
        }
      }
    },
    "freelancersv1GetCountersResponse": {
      "type": "object",
      "properties": {
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1GetSettingsResponse": {
      "type": "object",
      "properties": {
        "societies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetSettingsResponseSocietyItem"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1GetSettingsResponseCityItem"
          }
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1GetSettingsResponseSpecialityItem"
          }
        },
        "priceCategories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetSettingsResponsePriceCategoryItem"
          }
        }
      }
    },
    "freelancersv1GetSettingsResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1GetSettingsResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1PagesCountResponse": {
      "type": "object",
      "properties": {
        "pagesCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1PreliminaryFilterCountResponse": {
      "type": "object",
      "properties": {
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1SearchResponse": {
      "type": "object",
      "properties": {
        "freelancers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchResponseFreelancerItem"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1SearchResponseCityItem"
          }
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1SearchResponseSpecialityItem"
          }
        }
      }
    },
    "freelancersv1SearchResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1SearchResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "freelancersCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "freelancersv1SpecialitiesResponse": {
      "type": "object",
      "properties": {
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/freelancersv1SpecialitiesResponseSpecialityItem"
          }
        }
      }
    },
    "freelancersv1SpecialitiesResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "specialityId": {
          "type": "string",
          "format": "int64"
        },
        "specialityName": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateDoctorRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "telegramUsername": {
          "type": "string"
        },
        "agreePolicy": {
          "type": "boolean"
        },
        "cityId": {
          "type": "string",
          "format": "int64"
        },
        "specialityId": {
          "type": "string",
          "format": "int64"
        },
        "instagramUsername": {
          "type": "string"
        },
        "vkUsername": {
          "type": "string"
        },
        "dzenUsername": {
          "type": "string"
        },
        "youtubeUsername": {
          "type": "string"
        },
        "telegramChannel": {
          "type": "string"
        },
        "siteLink": {
          "type": "string"
        },
        "mainBlogTheme": {
          "type": "string"
        },
        "additionalCities": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "additionalSpecialties": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "marketingPreferences": {
          "type": "string"
        }
      }
    },
    "v1CreateDoctorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateDoctorResponseValidationError"
          }
        }
      }
    },
    "v1CreateDoctorResponseValidationError": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "v1CreateFreelancersRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "telegramUsername": {
          "type": "string"
        },
        "agreePolicy": {
          "type": "boolean"
        },
        "experienceWithDoctors": {
          "type": "boolean"
        },
        "cityId": {
          "type": "string",
          "format": "int64"
        },
        "specialityId": {
          "type": "string",
          "format": "int64"
        },
        "additionalCities": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "additionalSpecialties": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "socialNetworks": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "portfolioLink": {
          "type": "string"
        },
        "priceList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateFreelancersRequestPriceListItem"
          },
          "title": "Прайс-лист"
        }
      }
    },
    "v1CreateFreelancersRequestPriceListItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Название услуги"
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "Стоимость услуги"
        }
      }
    },
    "v1CreateFreelancersResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateFreelancersResponseValidationError"
          }
        }
      }
    },
    "v1CreateFreelancersResponseValidationError": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "v1FilterResponseDoctorItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "instLink": {
          "type": "string"
        },
        "instSubsCount": {
          "type": "string"
        },
        "instSubsCountText": {
          "type": "string"
        },
        "tgLink": {
          "type": "string"
        },
        "tgSubsCount": {
          "type": "string"
        },
        "tgSubsCountText": {
          "type": "string"
        },
        "speciality": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "v1FilterResponseFreelancerItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "speciality": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "experienceWithDoctors": {
          "type": "boolean",
          "title": "Опыт работы с врачами"
        },
        "priceCategory": {
          "type": "string",
          "format": "int64",
          "title": "Ценовая категория"
        },
        "socialNetworks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FilterResponseFreelancerItemSocialNetworkItem"
          },
          "title": "Соцсети"
        }
      }
    },
    "v1FilterResponseFreelancerItemSocialNetworkItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetDoctorResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "instUrl": {
          "type": "string",
          "title": "Соцсети"
        },
        "vkUrl": {
          "type": "string"
        },
        "dzenUrl": {
          "type": "string"
        },
        "tgUrl": {
          "type": "string"
        },
        "tgChannelUrl": {
          "type": "string"
        },
        "youtubeUrl": {
          "type": "string"
        },
        "tiktokUrl": {
          "type": "string"
        },
        "siteLink": {
          "type": "string"
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetDoctorResponseCityItem"
          },
          "title": "Города и специализации"
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetDoctorResponseSpecialityItem"
          }
        },
        "mainCity": {
          "$ref": "#/definitions/v1GetDoctorResponseCityItem"
        },
        "mainSpeciality": {
          "$ref": "#/definitions/v1GetDoctorResponseSpecialityItem"
        },
        "tgSubsCount": {
          "type": "string",
          "title": "Подписчики"
        },
        "tgSubsCountText": {
          "type": "string"
        },
        "tgLastUpdatedDate": {
          "type": "string"
        },
        "instSubsCount": {
          "type": "string"
        },
        "instSubsCountText": {
          "type": "string"
        },
        "instLastUpdatedDate": {
          "type": "string"
        },
        "mainBlogTheme": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "v1GetDoctorResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetDoctorResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetDoctorSeoDataResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1GetFreelancerResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "tgUrl": {
          "type": "string",
          "title": "Связаться"
        },
        "experienceWithDoctors": {
          "type": "boolean",
          "title": "Опыт работы с врачами"
        },
        "priceCategory": {
          "type": "string",
          "format": "int64",
          "title": "Ценовая категория"
        },
        "portfolioLink": {
          "type": "string",
          "title": "Портфолио"
        },
        "image": {
          "type": "string",
          "title": "Фотка"
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetFreelancerResponseCityItem"
          },
          "title": "Города и специализации"
        },
        "specialities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetFreelancerResponseSpecialityItem"
          }
        },
        "mainCity": {
          "$ref": "#/definitions/v1GetFreelancerResponseCityItem"
        },
        "mainSpeciality": {
          "$ref": "#/definitions/v1GetFreelancerResponseSpecialityItem"
        },
        "socialNetworks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetFreelancerResponseSocialNetworkItem"
          },
          "title": "Соцсети"
        },
        "priceList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetFreelancerResponsePriceListItem"
          },
          "title": "Прайс-лист"
        }
      }
    },
    "v1GetFreelancerResponseCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetFreelancerResponsePriceListItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Название услуги"
        },
        "amount": {
          "type": "string",
          "title": "Стоимость услуги"
        }
      }
    },
    "v1GetFreelancerResponseSocialNetworkItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetFreelancerResponseSpecialityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1GetFreelancersResponse": {
      "type": "object"
    },
    "v1SearchResponseDoctorItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "cityName": {
          "type": "string"
        },
        "specialityName": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "v1SearchResponseFreelancerItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "cityName": {
          "type": "string"
        },
        "specialityName": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "experienceWithDoctors": {
          "type": "boolean",
          "title": "Опыт работы с врачами"
        },
        "priceCategory": {
          "type": "string",
          "format": "int64",
          "title": "Ценовая категория"
        },
        "socialNetworks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchResponseFreelancerItemSocialNetworkItem"
          }
        }
      }
    },
    "v1SearchResponseFreelancerItemSocialNetworkItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
