// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: doctors/v1/doctors.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterRequest_Sort int32

const (
	FilterRequest_SUBSCRIBERS_DESC FilterRequest_Sort = 0
	FilterRequest_SUBSCRIBERS_ASC  FilterRequest_Sort = 1
)

// Enum value maps for FilterRequest_Sort.
var (
	FilterRequest_Sort_name = map[int32]string{
		0: "SUBSCRIBERS_DESC",
		1: "SUBSCRIBERS_ASC",
	}
	FilterRequest_Sort_value = map[string]int32{
		"SUBSCRIBERS_DESC": 0,
		"SUBSCRIBERS_ASC":  1,
	}
)

func (x FilterRequest_Sort) Enum() *FilterRequest_Sort {
	p := new(FilterRequest_Sort)
	*p = x
	return p
}

func (x FilterRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_doctors_v1_doctors_proto_enumTypes[0].Descriptor()
}

func (FilterRequest_Sort) Type() protoreflect.EnumType {
	return &file_doctors_v1_doctors_proto_enumTypes[0]
}

func (x FilterRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterRequest_Sort.Descriptor instead.
func (FilterRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{10, 0}
}

type GetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{0}
}

type GetSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterInfo      []*GetSettingsResponse_FilterItem     `protobuf:"bytes,1,rep,name=filter_info,json=filterInfo,proto3" json:"filter_info,omitempty"`
	Cities          []*GetSettingsResponse_CityItem       `protobuf:"bytes,2,rep,name=cities,proto3" json:"cities,omitempty"`
	Specialities    []*GetSettingsResponse_SpecialityItem `protobuf:"bytes,3,rep,name=specialities,proto3" json:"specialities,omitempty"`
	NewDoctorBanner bool                                  `protobuf:"varint,4,opt,name=new_doctor_banner,json=newDoctorBanner,proto3" json:"new_doctor_banner,omitempty"`
}

func (x *GetSettingsResponse) Reset() {
	*x = GetSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse) ProtoMessage() {}

func (x *GetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{1}
}

func (x *GetSettingsResponse) GetFilterInfo() []*GetSettingsResponse_FilterItem {
	if x != nil {
		return x.FilterInfo
	}
	return nil
}

func (x *GetSettingsResponse) GetCities() []*GetSettingsResponse_CityItem {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *GetSettingsResponse) GetSpecialities() []*GetSettingsResponse_SpecialityItem {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *GetSettingsResponse) GetNewDoctorBanner() bool {
	if x != nil {
		return x.NewDoctorBanner
	}
	return false
}

type GetCountersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCountersRequest) Reset() {
	*x = GetCountersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountersRequest) ProtoMessage() {}

func (x *GetCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountersRequest.ProtoReflect.Descriptor instead.
func (*GetCountersRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{2}
}

type GetCountersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorsCount     int64  `protobuf:"varint,1,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
	SubscribersCount string `protobuf:"bytes,2,opt,name=subscribers_count,json=subscribersCount,proto3" json:"subscribers_count,omitempty"`
}

func (x *GetCountersResponse) Reset() {
	*x = GetCountersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountersResponse) ProtoMessage() {}

func (x *GetCountersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountersResponse.ProtoReflect.Descriptor instead.
func (*GetCountersResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{3}
}

func (x *GetCountersResponse) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

func (x *GetCountersResponse) GetSubscribersCount() string {
	if x != nil {
		return x.SubscribersCount
	}
	return ""
}

type GetCitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCitiesRequest) Reset() {
	*x = GetCitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitiesRequest) ProtoMessage() {}

func (x *GetCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitiesRequest.ProtoReflect.Descriptor instead.
func (*GetCitiesRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{4}
}

type CitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cities []*CitiesResponse_CityItem `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
}

func (x *CitiesResponse) Reset() {
	*x = CitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesResponse) ProtoMessage() {}

func (x *CitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesResponse.ProtoReflect.Descriptor instead.
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{5}
}

func (x *CitiesResponse) GetCities() []*CitiesResponse_CityItem {
	if x != nil {
		return x.Cities
	}
	return nil
}

type GetSpecialitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSpecialitiesRequest) Reset() {
	*x = GetSpecialitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialitiesRequest) ProtoMessage() {}

func (x *GetSpecialitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialitiesRequest.ProtoReflect.Descriptor instead.
func (*GetSpecialitiesRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{6}
}

type SpecialitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Specialities []*SpecialitiesResponse_SpecialityItem `protobuf:"bytes,1,rep,name=specialities,proto3" json:"specialities,omitempty"`
}

func (x *SpecialitiesResponse) Reset() {
	*x = SpecialitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialitiesResponse) ProtoMessage() {}

func (x *SpecialitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialitiesResponse.ProtoReflect.Descriptor instead.
func (*SpecialitiesResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{7}
}

func (x *SpecialitiesResponse) GetSpecialities() []*SpecialitiesResponse_SpecialityItem {
	if x != nil {
		return x.Specialities
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{8}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctors      []*SearchResponse_DoctorItem     `protobuf:"bytes,1,rep,name=doctors,proto3" json:"doctors,omitempty"`
	Cities       []*SearchResponse_CityItem       `protobuf:"bytes,2,rep,name=cities,proto3" json:"cities,omitempty"`
	Specialities []*SearchResponse_SpecialityItem `protobuf:"bytes,3,rep,name=specialities,proto3" json:"specialities,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{9}
}

func (x *SearchResponse) GetDoctors() []*SearchResponse_DoctorItem {
	if x != nil {
		return x.Doctors
	}
	return nil
}

func (x *SearchResponse) GetCities() []*SearchResponse_CityItem {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *SearchResponse) GetSpecialities() []*SearchResponse_SpecialityItem {
	if x != nil {
		return x.Specialities
	}
	return nil
}

type FilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSubscribers int64              `protobuf:"varint,1,opt,name=max_subscribers,json=maxSubscribers,proto3" json:"max_subscribers,omitempty"`
	MinSubscribers int64              `protobuf:"varint,2,opt,name=min_subscribers,json=minSubscribers,proto3" json:"min_subscribers,omitempty"`
	Cities         []int64            `protobuf:"varint,3,rep,packed,name=cities,proto3" json:"cities,omitempty"`
	Specialities   []int64            `protobuf:"varint,4,rep,packed,name=specialities,proto3" json:"specialities,omitempty"`
	SocialMedia    []string           `protobuf:"bytes,5,rep,name=social_media,json=socialMedia,proto3" json:"social_media,omitempty"`
	Page           int64              `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Sort           FilterRequest_Sort `protobuf:"varint,7,opt,name=sort,proto3,enum=doctor.v1.FilterRequest_Sort" json:"sort,omitempty"`
}

func (x *FilterRequest) Reset() {
	*x = FilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRequest) ProtoMessage() {}

func (x *FilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRequest.ProtoReflect.Descriptor instead.
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{10}
}

func (x *FilterRequest) GetMaxSubscribers() int64 {
	if x != nil {
		return x.MaxSubscribers
	}
	return 0
}

func (x *FilterRequest) GetMinSubscribers() int64 {
	if x != nil {
		return x.MinSubscribers
	}
	return 0
}

func (x *FilterRequest) GetCities() []int64 {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *FilterRequest) GetSpecialities() []int64 {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *FilterRequest) GetSocialMedia() []string {
	if x != nil {
		return x.SocialMedia
	}
	return nil
}

func (x *FilterRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterRequest) GetSort() FilterRequest_Sort {
	if x != nil {
		return x.Sort
	}
	return FilterRequest_SUBSCRIBERS_DESC
}

type FilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctors          []*FilterResponse_DoctorItem `protobuf:"bytes,1,rep,name=doctors,proto3" json:"doctors,omitempty"`
	Pages            int64                        `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	SubscribersCount string                       `protobuf:"bytes,3,opt,name=subscribers_count,json=subscribersCount,proto3" json:"subscribers_count,omitempty"`
}

func (x *FilterResponse) Reset() {
	*x = FilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse) ProtoMessage() {}

func (x *FilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse.ProtoReflect.Descriptor instead.
func (*FilterResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{11}
}

func (x *FilterResponse) GetDoctors() []*FilterResponse_DoctorItem {
	if x != nil {
		return x.Doctors
	}
	return nil
}

func (x *FilterResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *FilterResponse) GetSubscribersCount() string {
	if x != nil {
		return x.SubscribersCount
	}
	return ""
}

type CreateDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email                 string  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	LastName              string  `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstName             string  `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName            string  `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	BirthDate             string  `protobuf:"bytes,5,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	TelegramUsername      string  `protobuf:"bytes,6,opt,name=telegram_username,json=telegramUsername,proto3" json:"telegram_username,omitempty"`
	AgreePolicy           bool    `protobuf:"varint,7,opt,name=agree_policy,json=agreePolicy,proto3" json:"agree_policy,omitempty"`
	CityId                int64   `protobuf:"varint,8,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	SpecialityId          int64   `protobuf:"varint,9,opt,name=speciality_id,json=specialityId,proto3" json:"speciality_id,omitempty"`
	InstagramUsername     string  `protobuf:"bytes,10,opt,name=instagram_username,json=instagramUsername,proto3" json:"instagram_username,omitempty"`
	VkUsername            string  `protobuf:"bytes,11,opt,name=vk_username,json=vkUsername,proto3" json:"vk_username,omitempty"`
	DzenUsername          string  `protobuf:"bytes,12,opt,name=dzen_username,json=dzenUsername,proto3" json:"dzen_username,omitempty"`
	YoutubeUsername       string  `protobuf:"bytes,13,opt,name=youtube_username,json=youtubeUsername,proto3" json:"youtube_username,omitempty"`
	TelegramChannel       string  `protobuf:"bytes,14,opt,name=telegram_channel,json=telegramChannel,proto3" json:"telegram_channel,omitempty"`
	SiteLink              string  `protobuf:"bytes,15,opt,name=site_link,json=siteLink,proto3" json:"site_link,omitempty"`
	MainBlogTheme         string  `protobuf:"bytes,16,opt,name=main_blog_theme,json=mainBlogTheme,proto3" json:"main_blog_theme,omitempty"`
	AdditionalCities      []int64 `protobuf:"varint,17,rep,packed,name=additional_cities,json=additionalCities,proto3" json:"additional_cities,omitempty"`
	AdditionalSpecialties []int64 `protobuf:"varint,18,rep,packed,name=additional_specialties,json=additionalSpecialties,proto3" json:"additional_specialties,omitempty"`
}

func (x *CreateDoctorRequest) Reset() {
	*x = CreateDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorRequest) ProtoMessage() {}

func (x *CreateDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorRequest.ProtoReflect.Descriptor instead.
func (*CreateDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{12}
}

func (x *CreateDoctorRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateDoctorRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateDoctorRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateDoctorRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *CreateDoctorRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CreateDoctorRequest) GetTelegramUsername() string {
	if x != nil {
		return x.TelegramUsername
	}
	return ""
}

func (x *CreateDoctorRequest) GetAgreePolicy() bool {
	if x != nil {
		return x.AgreePolicy
	}
	return false
}

func (x *CreateDoctorRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CreateDoctorRequest) GetSpecialityId() int64 {
	if x != nil {
		return x.SpecialityId
	}
	return 0
}

func (x *CreateDoctorRequest) GetInstagramUsername() string {
	if x != nil {
		return x.InstagramUsername
	}
	return ""
}

func (x *CreateDoctorRequest) GetVkUsername() string {
	if x != nil {
		return x.VkUsername
	}
	return ""
}

func (x *CreateDoctorRequest) GetDzenUsername() string {
	if x != nil {
		return x.DzenUsername
	}
	return ""
}

func (x *CreateDoctorRequest) GetYoutubeUsername() string {
	if x != nil {
		return x.YoutubeUsername
	}
	return ""
}

func (x *CreateDoctorRequest) GetTelegramChannel() string {
	if x != nil {
		return x.TelegramChannel
	}
	return ""
}

func (x *CreateDoctorRequest) GetSiteLink() string {
	if x != nil {
		return x.SiteLink
	}
	return ""
}

func (x *CreateDoctorRequest) GetMainBlogTheme() string {
	if x != nil {
		return x.MainBlogTheme
	}
	return ""
}

func (x *CreateDoctorRequest) GetAdditionalCities() []int64 {
	if x != nil {
		return x.AdditionalCities
	}
	return nil
}

func (x *CreateDoctorRequest) GetAdditionalSpecialties() []int64 {
	if x != nil {
		return x.AdditionalSpecialties
	}
	return nil
}

type CreateDoctorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*CreateDoctorResponse_ValidationError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateDoctorResponse) Reset() {
	*x = CreateDoctorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorResponse) ProtoMessage() {}

func (x *CreateDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorResponse.ProtoReflect.Descriptor instead.
func (*CreateDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDoctorResponse) GetErrors() []*CreateDoctorResponse_ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorSlug string `protobuf:"bytes,1,opt,name=doctor_slug,json=doctorSlug,proto3" json:"doctor_slug,omitempty"`
}

func (x *GetDoctorRequest) Reset() {
	*x = GetDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorRequest) ProtoMessage() {}

func (x *GetDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{14}
}

func (x *GetDoctorRequest) GetDoctorSlug() string {
	if x != nil {
		return x.DoctorSlug
	}
	return ""
}

type GetDoctorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	// Соцсети
	InstUrl      string `protobuf:"bytes,3,opt,name=inst_url,json=instUrl,proto3" json:"inst_url,omitempty"`
	VkUrl        string `protobuf:"bytes,4,opt,name=vk_url,json=vkUrl,proto3" json:"vk_url,omitempty"`
	DzenUrl      string `protobuf:"bytes,5,opt,name=dzen_url,json=dzenUrl,proto3" json:"dzen_url,omitempty"`
	TgUrl        string `protobuf:"bytes,6,opt,name=tg_url,json=tgUrl,proto3" json:"tg_url,omitempty"`
	TgChannelUrl string `protobuf:"bytes,7,opt,name=tg_channel_url,json=tgChannelUrl,proto3" json:"tg_channel_url,omitempty"`
	YoutubeUrl   string `protobuf:"bytes,8,opt,name=youtube_url,json=youtubeUrl,proto3" json:"youtube_url,omitempty"`
	TiktokUrl    string `protobuf:"bytes,9,opt,name=tiktok_url,json=tiktokUrl,proto3" json:"tiktok_url,omitempty"`
	SiteLink     string `protobuf:"bytes,10,opt,name=site_link,json=siteLink,proto3" json:"site_link,omitempty"`
	// Города и специализации
	Cities         []*GetDoctorResponse_CityItem       `protobuf:"bytes,11,rep,name=cities,proto3" json:"cities,omitempty"`
	Specialities   []*GetDoctorResponse_SpecialityItem `protobuf:"bytes,12,rep,name=specialities,proto3" json:"specialities,omitempty"`
	MainCity       *GetDoctorResponse_CityItem         `protobuf:"bytes,13,opt,name=main_city,json=mainCity,proto3" json:"main_city,omitempty"`
	MainSpeciality *GetDoctorResponse_SpecialityItem   `protobuf:"bytes,14,opt,name=main_speciality,json=mainSpeciality,proto3" json:"main_speciality,omitempty"`
	// Подписчики
	TgSubsCount         string `protobuf:"bytes,15,opt,name=tg_subs_count,json=tgSubsCount,proto3" json:"tg_subs_count,omitempty"`
	TgSubsCountText     string `protobuf:"bytes,16,opt,name=tg_subs_count_text,json=tgSubsCountText,proto3" json:"tg_subs_count_text,omitempty"`
	TgLastUpdatedDate   string `protobuf:"bytes,17,opt,name=tg_last_updated_date,json=tgLastUpdatedDate,proto3" json:"tg_last_updated_date,omitempty"`
	InstSubsCount       string `protobuf:"bytes,18,opt,name=inst_subs_count,json=instSubsCount,proto3" json:"inst_subs_count,omitempty"`
	InstSubsCountText   string `protobuf:"bytes,19,opt,name=inst_subs_count_text,json=instSubsCountText,proto3" json:"inst_subs_count_text,omitempty"`
	InstLastUpdatedDate string `protobuf:"bytes,20,opt,name=inst_last_updated_date,json=instLastUpdatedDate,proto3" json:"inst_last_updated_date,omitempty"`
	MainBlogTheme       string `protobuf:"bytes,21,opt,name=main_blog_theme,json=mainBlogTheme,proto3" json:"main_blog_theme,omitempty"`
	Image               string `protobuf:"bytes,22,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetDoctorResponse) Reset() {
	*x = GetDoctorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorResponse) ProtoMessage() {}

func (x *GetDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{15}
}

func (x *GetDoctorResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDoctorResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *GetDoctorResponse) GetInstUrl() string {
	if x != nil {
		return x.InstUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetVkUrl() string {
	if x != nil {
		return x.VkUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetDzenUrl() string {
	if x != nil {
		return x.DzenUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetTgUrl() string {
	if x != nil {
		return x.TgUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetTgChannelUrl() string {
	if x != nil {
		return x.TgChannelUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetYoutubeUrl() string {
	if x != nil {
		return x.YoutubeUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetTiktokUrl() string {
	if x != nil {
		return x.TiktokUrl
	}
	return ""
}

func (x *GetDoctorResponse) GetSiteLink() string {
	if x != nil {
		return x.SiteLink
	}
	return ""
}

func (x *GetDoctorResponse) GetCities() []*GetDoctorResponse_CityItem {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *GetDoctorResponse) GetSpecialities() []*GetDoctorResponse_SpecialityItem {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *GetDoctorResponse) GetMainCity() *GetDoctorResponse_CityItem {
	if x != nil {
		return x.MainCity
	}
	return nil
}

func (x *GetDoctorResponse) GetMainSpeciality() *GetDoctorResponse_SpecialityItem {
	if x != nil {
		return x.MainSpeciality
	}
	return nil
}

func (x *GetDoctorResponse) GetTgSubsCount() string {
	if x != nil {
		return x.TgSubsCount
	}
	return ""
}

func (x *GetDoctorResponse) GetTgSubsCountText() string {
	if x != nil {
		return x.TgSubsCountText
	}
	return ""
}

func (x *GetDoctorResponse) GetTgLastUpdatedDate() string {
	if x != nil {
		return x.TgLastUpdatedDate
	}
	return ""
}

func (x *GetDoctorResponse) GetInstSubsCount() string {
	if x != nil {
		return x.InstSubsCount
	}
	return ""
}

func (x *GetDoctorResponse) GetInstSubsCountText() string {
	if x != nil {
		return x.InstSubsCountText
	}
	return ""
}

func (x *GetDoctorResponse) GetInstLastUpdatedDate() string {
	if x != nil {
		return x.InstLastUpdatedDate
	}
	return ""
}

func (x *GetDoctorResponse) GetMainBlogTheme() string {
	if x != nil {
		return x.MainBlogTheme
	}
	return ""
}

func (x *GetDoctorResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type PreliminaryFilterCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// todo вынести в common
	MaxSubscribers int64    `protobuf:"varint,1,opt,name=max_subscribers,json=maxSubscribers,proto3" json:"max_subscribers,omitempty"`
	MinSubscribers int64    `protobuf:"varint,2,opt,name=min_subscribers,json=minSubscribers,proto3" json:"min_subscribers,omitempty"`
	Cities         []int64  `protobuf:"varint,3,rep,packed,name=cities,proto3" json:"cities,omitempty"`
	Specialities   []int64  `protobuf:"varint,4,rep,packed,name=specialities,proto3" json:"specialities,omitempty"`
	SocialMedia    []string `protobuf:"bytes,5,rep,name=social_media,json=socialMedia,proto3" json:"social_media,omitempty"`
	Page           int64    `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *PreliminaryFilterCountRequest) Reset() {
	*x = PreliminaryFilterCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreliminaryFilterCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreliminaryFilterCountRequest) ProtoMessage() {}

func (x *PreliminaryFilterCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreliminaryFilterCountRequest.ProtoReflect.Descriptor instead.
func (*PreliminaryFilterCountRequest) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{16}
}

func (x *PreliminaryFilterCountRequest) GetMaxSubscribers() int64 {
	if x != nil {
		return x.MaxSubscribers
	}
	return 0
}

func (x *PreliminaryFilterCountRequest) GetMinSubscribers() int64 {
	if x != nil {
		return x.MinSubscribers
	}
	return 0
}

func (x *PreliminaryFilterCountRequest) GetCities() []int64 {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *PreliminaryFilterCountRequest) GetSpecialities() []int64 {
	if x != nil {
		return x.Specialities
	}
	return nil
}

func (x *PreliminaryFilterCountRequest) GetSocialMedia() []string {
	if x != nil {
		return x.SocialMedia
	}
	return nil
}

func (x *PreliminaryFilterCountRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type PreliminaryFilterCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoctorsCount int64 `protobuf:"varint,1,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
}

func (x *PreliminaryFilterCountResponse) Reset() {
	*x = PreliminaryFilterCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreliminaryFilterCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreliminaryFilterCountResponse) ProtoMessage() {}

func (x *PreliminaryFilterCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreliminaryFilterCountResponse.ProtoReflect.Descriptor instead.
func (*PreliminaryFilterCountResponse) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{17}
}

func (x *PreliminaryFilterCountResponse) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

type GetSettingsResponse_FilterItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetSettingsResponse_FilterItem) Reset() {
	*x = GetSettingsResponse_FilterItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse_FilterItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse_FilterItem) ProtoMessage() {}

func (x *GetSettingsResponse_FilterItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse_FilterItem.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse_FilterItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetSettingsResponse_FilterItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSettingsResponse_FilterItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetSettingsResponse_CityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DoctorsCount int64  `protobuf:"varint,3,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
}

func (x *GetSettingsResponse_CityItem) Reset() {
	*x = GetSettingsResponse_CityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse_CityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse_CityItem) ProtoMessage() {}

func (x *GetSettingsResponse_CityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse_CityItem.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse_CityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetSettingsResponse_CityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSettingsResponse_CityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSettingsResponse_CityItem) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

type GetSettingsResponse_SpecialityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DoctorsCount int64  `protobuf:"varint,3,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
}

func (x *GetSettingsResponse_SpecialityItem) Reset() {
	*x = GetSettingsResponse_SpecialityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse_SpecialityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse_SpecialityItem) ProtoMessage() {}

func (x *GetSettingsResponse_SpecialityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse_SpecialityItem.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse_SpecialityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GetSettingsResponse_SpecialityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSettingsResponse_SpecialityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSettingsResponse_SpecialityItem) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

type CitiesResponse_CityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityId   int64  `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CityName string `protobuf:"bytes,2,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
}

func (x *CitiesResponse_CityItem) Reset() {
	*x = CitiesResponse_CityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesResponse_CityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesResponse_CityItem) ProtoMessage() {}

func (x *CitiesResponse_CityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesResponse_CityItem.ProtoReflect.Descriptor instead.
func (*CitiesResponse_CityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CitiesResponse_CityItem) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CitiesResponse_CityItem) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

type SpecialitiesResponse_SpecialityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecialityId   int64  `protobuf:"varint,1,opt,name=speciality_id,json=specialityId,proto3" json:"speciality_id,omitempty"`
	SpecialityName string `protobuf:"bytes,2,opt,name=speciality_name,json=specialityName,proto3" json:"speciality_name,omitempty"`
}

func (x *SpecialitiesResponse_SpecialityItem) Reset() {
	*x = SpecialitiesResponse_SpecialityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialitiesResponse_SpecialityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialitiesResponse_SpecialityItem) ProtoMessage() {}

func (x *SpecialitiesResponse_SpecialityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialitiesResponse_SpecialityItem.ProtoReflect.Descriptor instead.
func (*SpecialitiesResponse_SpecialityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SpecialitiesResponse_SpecialityItem) GetSpecialityId() int64 {
	if x != nil {
		return x.SpecialityId
	}
	return 0
}

func (x *SpecialitiesResponse_SpecialityItem) GetSpecialityName() string {
	if x != nil {
		return x.SpecialityName
	}
	return ""
}

type SearchResponse_DoctorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug           string `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	CityName       string `protobuf:"bytes,4,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	SpecialityName string `protobuf:"bytes,5,opt,name=speciality_name,json=specialityName,proto3" json:"speciality_name,omitempty"`
	Image          string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *SearchResponse_DoctorItem) Reset() {
	*x = SearchResponse_DoctorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse_DoctorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_DoctorItem) ProtoMessage() {}

func (x *SearchResponse_DoctorItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_DoctorItem.ProtoReflect.Descriptor instead.
func (*SearchResponse_DoctorItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{9, 0}
}

func (x *SearchResponse_DoctorItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchResponse_DoctorItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchResponse_DoctorItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *SearchResponse_DoctorItem) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *SearchResponse_DoctorItem) GetSpecialityName() string {
	if x != nil {
		return x.SpecialityName
	}
	return ""
}

func (x *SearchResponse_DoctorItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type SearchResponse_CityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DoctorsCount int64  `protobuf:"varint,3,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
}

func (x *SearchResponse_CityItem) Reset() {
	*x = SearchResponse_CityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse_CityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_CityItem) ProtoMessage() {}

func (x *SearchResponse_CityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_CityItem.ProtoReflect.Descriptor instead.
func (*SearchResponse_CityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{9, 1}
}

func (x *SearchResponse_CityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchResponse_CityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchResponse_CityItem) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

type SearchResponse_SpecialityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DoctorsCount int64  `protobuf:"varint,3,opt,name=doctors_count,json=doctorsCount,proto3" json:"doctors_count,omitempty"`
}

func (x *SearchResponse_SpecialityItem) Reset() {
	*x = SearchResponse_SpecialityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse_SpecialityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_SpecialityItem) ProtoMessage() {}

func (x *SearchResponse_SpecialityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse_SpecialityItem.ProtoReflect.Descriptor instead.
func (*SearchResponse_SpecialityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{9, 2}
}

func (x *SearchResponse_SpecialityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchResponse_SpecialityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchResponse_SpecialityItem) GetDoctorsCount() int64 {
	if x != nil {
		return x.DoctorsCount
	}
	return 0
}

type FilterResponse_DoctorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug              string `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	InstLink          string `protobuf:"bytes,4,opt,name=inst_link,json=instLink,proto3" json:"inst_link,omitempty"`
	InstSubsCount     string `protobuf:"bytes,5,opt,name=inst_subs_count,json=instSubsCount,proto3" json:"inst_subs_count,omitempty"`
	InstSubsCountText string `protobuf:"bytes,6,opt,name=inst_subs_count_text,json=instSubsCountText,proto3" json:"inst_subs_count_text,omitempty"`
	TgLink            string `protobuf:"bytes,7,opt,name=tg_link,json=tgLink,proto3" json:"tg_link,omitempty"`
	TgSubsCount       string `protobuf:"bytes,8,opt,name=tg_subs_count,json=tgSubsCount,proto3" json:"tg_subs_count,omitempty"`
	TgSubsCountText   string `protobuf:"bytes,9,opt,name=tg_subs_count_text,json=tgSubsCountText,proto3" json:"tg_subs_count_text,omitempty"`
	Speciality        string `protobuf:"bytes,10,opt,name=speciality,proto3" json:"speciality,omitempty"`
	City              string `protobuf:"bytes,11,opt,name=city,proto3" json:"city,omitempty"`
	Image             string `protobuf:"bytes,12,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *FilterResponse_DoctorItem) Reset() {
	*x = FilterResponse_DoctorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterResponse_DoctorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterResponse_DoctorItem) ProtoMessage() {}

func (x *FilterResponse_DoctorItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterResponse_DoctorItem.ProtoReflect.Descriptor instead.
func (*FilterResponse_DoctorItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{11, 0}
}

func (x *FilterResponse_DoctorItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilterResponse_DoctorItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetInstLink() string {
	if x != nil {
		return x.InstLink
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetInstSubsCount() string {
	if x != nil {
		return x.InstSubsCount
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetInstSubsCountText() string {
	if x != nil {
		return x.InstSubsCountText
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetTgLink() string {
	if x != nil {
		return x.TgLink
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetTgSubsCount() string {
	if x != nil {
		return x.TgSubsCount
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetTgSubsCountText() string {
	if x != nil {
		return x.TgSubsCountText
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetSpeciality() string {
	if x != nil {
		return x.Speciality
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *FilterResponse_DoctorItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type CreateDoctorResponse_ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Text  string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateDoctorResponse_ValidationError) Reset() {
	*x = CreateDoctorResponse_ValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDoctorResponse_ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorResponse_ValidationError) ProtoMessage() {}

func (x *CreateDoctorResponse_ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorResponse_ValidationError.ProtoReflect.Descriptor instead.
func (*CreateDoctorResponse_ValidationError) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CreateDoctorResponse_ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *CreateDoctorResponse_ValidationError) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetDoctorResponse_CityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDoctorResponse_CityItem) Reset() {
	*x = GetDoctorResponse_CityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorResponse_CityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorResponse_CityItem) ProtoMessage() {}

func (x *GetDoctorResponse_CityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorResponse_CityItem.ProtoReflect.Descriptor instead.
func (*GetDoctorResponse_CityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetDoctorResponse_CityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDoctorResponse_CityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDoctorResponse_SpecialityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDoctorResponse_SpecialityItem) Reset() {
	*x = GetDoctorResponse_SpecialityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doctors_v1_doctors_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDoctorResponse_SpecialityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorResponse_SpecialityItem) ProtoMessage() {}

func (x *GetDoctorResponse_SpecialityItem) ProtoReflect() protoreflect.Message {
	mi := &file_doctors_v1_doctors_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorResponse_SpecialityItem.ProtoReflect.Descriptor instead.
func (*GetDoctorResponse_SpecialityItem) Descriptor() ([]byte, []int) {
	return file_doctors_v1_doctors_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GetDoctorResponse_SpecialityItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDoctorResponse_SpecialityItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_doctors_v1_doctors_proto protoreflect.FileDescriptor

var file_doctors_v1_doctors_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x87, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65,
	0x77, 0x5f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x34, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x1a, 0x53, 0x0a, 0x08,
	0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x59, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x40,
	0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x14, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x5e, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xad,
	0x04, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4c, 0x0a,
	0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x0a,
	0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x53,
	0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x59, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xba,
	0x02, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x31, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x53, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x42, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x84, 0x04, 0x0a, 0x0e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0xee, 0x02, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x14, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x67, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x67, 0x53, 0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x74,
	0x67, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x67, 0x53, 0x75, 0x62, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0xd9, 0x06, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x18, 0xff, 0x01, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x64, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0a,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x6a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x11, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0b, 0x76, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0a, 0x76, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x7a, 0x65, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0c, 0x64, 0x7a, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0f, 0x79, 0x6f, 0x75, 0x74, 0x75,
	0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0f, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01, 0x52, 0x08, 0x73, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2f, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6c,
	0x6f, 0x67, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x67, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x03, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x18, 0x01, 0x52, 0x10, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x03, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x18, 0x01, 0x52, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x1a, 0x3b, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x33, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x6c,
	0x75, 0x67, 0x22, 0x80, 0x08, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x76,
	0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x7a, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x7a, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x67, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x6f,
	0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6b, 0x74, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x67, 0x53, 0x75, 0x62, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x74, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x67, 0x53, 0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x67, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x74, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x16,
	0x69, 0x6e, 0x73, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e,
	0x73, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e,
	0x42, 0x6c, 0x6f, 0x67, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a,
	0x2e, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x34, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x1e,
	0x50, 0x72, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0x85, 0x0e, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x92, 0x41, 0x23, 0x12, 0x21, 0xd0, 0x94, 0xd0, 0xbe, 0xd1,
	0x81, 0xd1, 0x82, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb5, 0x20, 0xd1, 0x84,
	0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd1, 0x82, 0xd1, 0x80, 0xd1, 0x8b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x93, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xc4, 0x01, 0x92, 0x41, 0xa3, 0x01, 0x12, 0xa0, 0x01, 0xd0, 0x9f, 0xd0,
	0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20,
	0xd0, 0xb8, 0xd0, 0xbd, 0xd1, 0x84, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbc, 0xd0, 0xb0, 0xd1, 0x86,
	0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0x20, 0xd1, 0x81, 0xd1, 0x87, 0xd0, 0xb5,
	0xd1, 0x82, 0xd1, 0x87, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xbc, 0x20, 0x28, 0xd0, 0xba,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2,
	0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0,
	0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xb2, 0x20, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb5, 0x2c,
	0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1,
	0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbf, 0xd0, 0xb8,
	0xd1, 0x81, 0xd1, 0x87, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xbe, 0xd0, 0xb2, 0x29, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0xed, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x92,
	0x41, 0x50, 0x12, 0x4e, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb4, 0xd1, 0x80, 0xd0, 0xb0,
	0xd1, 0x81, 0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1,
	0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbf,
	0xd0, 0xb0, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x8e, 0xd1, 0x89, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0xd0,
	0xbf, 0xd0, 0xbe, 0xd0, 0xb4, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0xd1, 0x82,
	0xd1, 0x80, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xa4, 0x01, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5f, 0x92, 0x41, 0x41, 0x12, 0x3f, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1,
	0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb3, 0xd0, 0xbe, 0xd1, 0x80,
	0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20,
	0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb3, 0xd0, 0xb8, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0,
	0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0xca, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x92, 0x41, 0x4f, 0x12, 0x4d,
	0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8,
	0xd0, 0xb5, 0x20, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xb5, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb0, 0xd0,
	0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xb9, 0x20,
	0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb3, 0xd0, 0xb8, 0xd1,
	0x81, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xd3,
	0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93,
	0x01, 0x92, 0x41, 0x72, 0x12, 0x70, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xba,
	0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb0, 0x2c,
	0x20, 0xd0, 0xb3, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb0, 0x2c, 0x20, 0xd1,
	0x81, 0xd0, 0xbf, 0xd0, 0xb5, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0,
	0xbd, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb8, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0x20, 0xd0,
	0xbf, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xbd, 0xd0, 0xbd, 0xd1,
	0x8b, 0xd0, 0xbc, 0x20, 0xd0, 0xb7, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1, 0x87, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd0, 0xb8, 0xd1, 0x8f, 0xd0, 0xbc, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0xb0, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x92, 0x41, 0x50, 0x12, 0x4e, 0xd0, 0xa4, 0xd0, 0xb8, 0xd0,
	0xbb, 0xd1, 0x8c, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd1, 0x8f, 0x20,
	0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xb2,
	0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83,
	0xd0, 0xbf, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xbc, 0x20, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb, 0xd1,
	0x8c, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2d,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x92, 0x41, 0x27, 0x12, 0x25,
	0xd0, 0xa0, 0xd0, 0xb5, 0xd0, 0xb3, 0xd0, 0xb8, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x80, 0xd0, 0xb0,
	0xd1, 0x86, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82, 0xd0,
	0xbe, 0xd1, 0x80, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x7a, 0x92, 0x41, 0x52, 0x12, 0x50, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87,
	0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd0, 0xb4, 0xd0, 0xb5, 0xd1, 0x82, 0xd0,
	0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb9, 0x20, 0xd0, 0xb8, 0xd0, 0xbd,
	0xd1, 0x84, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbc, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8,
	0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xba, 0xd1, 0x82,
	0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb0, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x7b, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x7d, 0x42, 0x10, 0x5a, 0x0e, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doctors_v1_doctors_proto_rawDescOnce sync.Once
	file_doctors_v1_doctors_proto_rawDescData = file_doctors_v1_doctors_proto_rawDesc
)

func file_doctors_v1_doctors_proto_rawDescGZIP() []byte {
	file_doctors_v1_doctors_proto_rawDescOnce.Do(func() {
		file_doctors_v1_doctors_proto_rawDescData = protoimpl.X.CompressGZIP(file_doctors_v1_doctors_proto_rawDescData)
	})
	return file_doctors_v1_doctors_proto_rawDescData
}

var file_doctors_v1_doctors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_doctors_v1_doctors_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_doctors_v1_doctors_proto_goTypes = []any{
	(FilterRequest_Sort)(0),                      // 0: doctor.v1.FilterRequest.Sort
	(*GetSettingsRequest)(nil),                   // 1: doctor.v1.GetSettingsRequest
	(*GetSettingsResponse)(nil),                  // 2: doctor.v1.GetSettingsResponse
	(*GetCountersRequest)(nil),                   // 3: doctor.v1.GetCountersRequest
	(*GetCountersResponse)(nil),                  // 4: doctor.v1.GetCountersResponse
	(*GetCitiesRequest)(nil),                     // 5: doctor.v1.GetCitiesRequest
	(*CitiesResponse)(nil),                       // 6: doctor.v1.CitiesResponse
	(*GetSpecialitiesRequest)(nil),               // 7: doctor.v1.GetSpecialitiesRequest
	(*SpecialitiesResponse)(nil),                 // 8: doctor.v1.SpecialitiesResponse
	(*SearchRequest)(nil),                        // 9: doctor.v1.SearchRequest
	(*SearchResponse)(nil),                       // 10: doctor.v1.SearchResponse
	(*FilterRequest)(nil),                        // 11: doctor.v1.FilterRequest
	(*FilterResponse)(nil),                       // 12: doctor.v1.FilterResponse
	(*CreateDoctorRequest)(nil),                  // 13: doctor.v1.CreateDoctorRequest
	(*CreateDoctorResponse)(nil),                 // 14: doctor.v1.CreateDoctorResponse
	(*GetDoctorRequest)(nil),                     // 15: doctor.v1.GetDoctorRequest
	(*GetDoctorResponse)(nil),                    // 16: doctor.v1.GetDoctorResponse
	(*PreliminaryFilterCountRequest)(nil),        // 17: doctor.v1.PreliminaryFilterCountRequest
	(*PreliminaryFilterCountResponse)(nil),       // 18: doctor.v1.PreliminaryFilterCountResponse
	(*GetSettingsResponse_FilterItem)(nil),       // 19: doctor.v1.GetSettingsResponse.FilterItem
	(*GetSettingsResponse_CityItem)(nil),         // 20: doctor.v1.GetSettingsResponse.CityItem
	(*GetSettingsResponse_SpecialityItem)(nil),   // 21: doctor.v1.GetSettingsResponse.SpecialityItem
	(*CitiesResponse_CityItem)(nil),              // 22: doctor.v1.CitiesResponse.CityItem
	(*SpecialitiesResponse_SpecialityItem)(nil),  // 23: doctor.v1.SpecialitiesResponse.SpecialityItem
	(*SearchResponse_DoctorItem)(nil),            // 24: doctor.v1.SearchResponse.DoctorItem
	(*SearchResponse_CityItem)(nil),              // 25: doctor.v1.SearchResponse.CityItem
	(*SearchResponse_SpecialityItem)(nil),        // 26: doctor.v1.SearchResponse.SpecialityItem
	(*FilterResponse_DoctorItem)(nil),            // 27: doctor.v1.FilterResponse.DoctorItem
	(*CreateDoctorResponse_ValidationError)(nil), // 28: doctor.v1.CreateDoctorResponse.ValidationError
	(*GetDoctorResponse_CityItem)(nil),           // 29: doctor.v1.GetDoctorResponse.CityItem
	(*GetDoctorResponse_SpecialityItem)(nil),     // 30: doctor.v1.GetDoctorResponse.SpecialityItem
}
var file_doctors_v1_doctors_proto_depIdxs = []int32{
	19, // 0: doctor.v1.GetSettingsResponse.filter_info:type_name -> doctor.v1.GetSettingsResponse.FilterItem
	20, // 1: doctor.v1.GetSettingsResponse.cities:type_name -> doctor.v1.GetSettingsResponse.CityItem
	21, // 2: doctor.v1.GetSettingsResponse.specialities:type_name -> doctor.v1.GetSettingsResponse.SpecialityItem
	22, // 3: doctor.v1.CitiesResponse.cities:type_name -> doctor.v1.CitiesResponse.CityItem
	23, // 4: doctor.v1.SpecialitiesResponse.specialities:type_name -> doctor.v1.SpecialitiesResponse.SpecialityItem
	24, // 5: doctor.v1.SearchResponse.doctors:type_name -> doctor.v1.SearchResponse.DoctorItem
	25, // 6: doctor.v1.SearchResponse.cities:type_name -> doctor.v1.SearchResponse.CityItem
	26, // 7: doctor.v1.SearchResponse.specialities:type_name -> doctor.v1.SearchResponse.SpecialityItem
	0,  // 8: doctor.v1.FilterRequest.sort:type_name -> doctor.v1.FilterRequest.Sort
	27, // 9: doctor.v1.FilterResponse.doctors:type_name -> doctor.v1.FilterResponse.DoctorItem
	28, // 10: doctor.v1.CreateDoctorResponse.errors:type_name -> doctor.v1.CreateDoctorResponse.ValidationError
	29, // 11: doctor.v1.GetDoctorResponse.cities:type_name -> doctor.v1.GetDoctorResponse.CityItem
	30, // 12: doctor.v1.GetDoctorResponse.specialities:type_name -> doctor.v1.GetDoctorResponse.SpecialityItem
	29, // 13: doctor.v1.GetDoctorResponse.main_city:type_name -> doctor.v1.GetDoctorResponse.CityItem
	30, // 14: doctor.v1.GetDoctorResponse.main_speciality:type_name -> doctor.v1.GetDoctorResponse.SpecialityItem
	1,  // 15: doctor.v1.DoctorService.GetSettings:input_type -> doctor.v1.GetSettingsRequest
	3,  // 16: doctor.v1.DoctorService.GetCounters:input_type -> doctor.v1.GetCountersRequest
	17, // 17: doctor.v1.DoctorService.GetPreliminaryFilterCount:input_type -> doctor.v1.PreliminaryFilterCountRequest
	5,  // 18: doctor.v1.DoctorService.GetCities:input_type -> doctor.v1.GetCitiesRequest
	7,  // 19: doctor.v1.DoctorService.GetSpecialities:input_type -> doctor.v1.GetSpecialitiesRequest
	9,  // 20: doctor.v1.DoctorService.Search:input_type -> doctor.v1.SearchRequest
	11, // 21: doctor.v1.DoctorService.Filter:input_type -> doctor.v1.FilterRequest
	13, // 22: doctor.v1.DoctorService.CreateDoctor:input_type -> doctor.v1.CreateDoctorRequest
	15, // 23: doctor.v1.DoctorService.GetDoctor:input_type -> doctor.v1.GetDoctorRequest
	2,  // 24: doctor.v1.DoctorService.GetSettings:output_type -> doctor.v1.GetSettingsResponse
	4,  // 25: doctor.v1.DoctorService.GetCounters:output_type -> doctor.v1.GetCountersResponse
	18, // 26: doctor.v1.DoctorService.GetPreliminaryFilterCount:output_type -> doctor.v1.PreliminaryFilterCountResponse
	6,  // 27: doctor.v1.DoctorService.GetCities:output_type -> doctor.v1.CitiesResponse
	8,  // 28: doctor.v1.DoctorService.GetSpecialities:output_type -> doctor.v1.SpecialitiesResponse
	10, // 29: doctor.v1.DoctorService.Search:output_type -> doctor.v1.SearchResponse
	12, // 30: doctor.v1.DoctorService.Filter:output_type -> doctor.v1.FilterResponse
	14, // 31: doctor.v1.DoctorService.CreateDoctor:output_type -> doctor.v1.CreateDoctorResponse
	16, // 32: doctor.v1.DoctorService.GetDoctor:output_type -> doctor.v1.GetDoctorResponse
	24, // [24:33] is the sub-list for method output_type
	15, // [15:24] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_doctors_v1_doctors_proto_init() }
func file_doctors_v1_doctors_proto_init() {
	if File_doctors_v1_doctors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doctors_v1_doctors_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetCountersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetSpecialitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SpecialitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDoctorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetDoctorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PreliminaryFilterCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PreliminaryFilterCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetSettingsResponse_FilterItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetSettingsResponse_CityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetSettingsResponse_SpecialityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CitiesResponse_CityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SpecialitiesResponse_SpecialityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SearchResponse_DoctorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SearchResponse_CityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SearchResponse_SpecialityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*FilterResponse_DoctorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDoctorResponse_ValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetDoctorResponse_CityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doctors_v1_doctors_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetDoctorResponse_SpecialityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doctors_v1_doctors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doctors_v1_doctors_proto_goTypes,
		DependencyIndexes: file_doctors_v1_doctors_proto_depIdxs,
		EnumInfos:         file_doctors_v1_doctors_proto_enumTypes,
		MessageInfos:      file_doctors_v1_doctors_proto_msgTypes,
	}.Build()
	File_doctors_v1_doctors_proto = out.File
	file_doctors_v1_doctors_proto_rawDesc = nil
	file_doctors_v1_doctors_proto_goTypes = nil
	file_doctors_v1_doctors_proto_depIdxs = nil
}
